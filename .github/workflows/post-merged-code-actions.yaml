name: Django CI

on:
  pull_request:
    branches: [ main ]

jobs:


  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.8 ]

    steps:
      - name: Extract current branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
        
      - name: Gen target branch name
        run: echo "GITHUB_SHA_SHORT= $( if [[ ${{ steps.extract_branch.outputs.branch }} == release* ]]; then echo release; elif [[ ${{ steps.extract_branch.outputs.branch }} == hotfix* ]]; then echo hotfix ;else echo ${{ steps.extract_branch.outputs.branch }} ; fi)" >> $GITHUB_ENV
        id: get_target_branch

      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          pytest --cov --cov-report=xml:coverage.xml --junitxml=./pytest-report.xml
      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3
      - name: Run sonarqube
        id: sona-runner
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=longnguyen97
          -Dsonar.host.url=https://sonarcloud.io/
          -Dsonar.projectKey=LongNguyen97_test_cicd
          -Dsonar.qualitygate.wait=true
          -Dsonar.python.coverage.reportPaths=${{ github.workspace }}/coverage.xml
          -Dsonar.python.xunit.reportPath=${{ github.workspace }}/pytest-report.xml
          -Dsonar.branch.name=${{ GITHUB_SHA_SHORT }}
